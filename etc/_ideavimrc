let mapleader = " "

"" Source your .vimrc
"source ~/.vimrc

set ideajoin
set NERDTree
"set sneak
"set quickscope
"set easymotion

inoremap jk <ESC>

" basic emacs navigation in insert mode, some cua mode
inoremap <C-f> <Right>
inoremap <C-b> <Left>
inoremap <C-n> <Down>
inoremap <C-p> <Up>
inoremap <C-e> <End>
inoremap <C-a> <Home>
inoremap <M-f> <C-o>w
inoremap <M-b> <C-o>b
inoremap <M-d> <C-o>dw
inoremap <M-BS> <C-o>db
inoremap <C-y> <C-o>P
vnoremap <C-c> y
inoremap <C-v> <C-o>P
vnoremap <C-w> <C-o>d
vnoremap <M-w> <C-o>y

nnoremap <Leader>q :q<CR>
nnoremap <Leader>aq :qa<CR>

vnoremap x "_x
nnoremap x "_x
vnoremap p "_dp
vnoremap P "_dP

nnoremap - <C-x>
nnoremap + <C-a>

set clipboard=unnamed
set clipboard+=ideaput
set showmode
set showcmd
set scrolloff=16

vnoremap > >gv
vnoremap < <gv

vnoremap ( c()<ESC>P
vnoremap [ c[]<ESC>P
vnoremap { c{}<ESC>P

nnoremap <C-3> ciw#{}<ESC>P

map <M-g> <Action>(Generate)
map <C-,> <Action>(ShowSettings)
map <C-S-,> <Action>(ShowProjectStructureSettings)
map <M-q> <Action>(CloseEditor)
map <M-a><M-q> <Action>(CloseAllEditor)
map <M-n> <Action>(MethodDown)
map <M-S-n> <Action>(MethodUp)
map <M-S-j> <Action>(MoveLineDown)
map <M-S-k> <Action>(MoveLineUp)
" Pretty useful feature
map gs <Action>(ActivateStructureToolWindow)

map <Leader>rr <Action>(UpdateRunningApplication)
map <Leader>t <Action>(ActivateTerminalToolWindow)
map <Leader>ns <Action>(NewScratchFile)
map <Leader>ro <Action>(ReformatCode)
map <Leader>8 <Action>(ToggleLineBreakpoint)
map <Leader>rf <Action>(RenameFile)
map <Leader>rn <Action>(RenameElement)
map <Leader><Space> <Action>(GotoAction)
map <M-x> <Action>(GotoAction)
map <Leader>ff <Action>(GotoFile)
map <Leader>fc <Action>(GotoClass)
map <Leader>fr <Action>(RecentFiles)
map <Leader>bn <Action>(NextTab)
map <Leader>bp <Action>(PreviousTab)

map <Leader>w <Action>(EditorSelectWord)
map <Leader>W <Action>(EditorUnSelectWord)
map <M-h> <Action>(EditorSelectWord)
map <M-S-h> <Action>(EditorUnSelectWord)

map <C-s> <Action>(Find)
map <C-S-s> <Action>(Replace)

map ngd <Action>(NextDiff)
map Ngd <Action>(PreviousDiff)